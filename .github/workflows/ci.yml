name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      python-changed: ${{ steps.filter.outputs.python }}
      kotlin-changed: ${{ steps.filter.outputs.kotlin }}
      bazel-changed:  ${{ steps.filter.outputs.bazel }}
      docs-changed:   ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            python:
              - '**/*.py'
              - 'pyproject.toml'
            kotlin:
              - '**/*.kt'
              - 'build.gradle*'
            bazel:
              - '**/BUILD.bazel'
              - 'WORKSPACE'
            docs:
              - 'docs/**'

  python:
    needs: detect-changes
    if: needs.detect-changes.outputs.python-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install ruff mypy pytest coverage
      - run: ruff check .
      - run: mypy .
      - run: pytest -q --cov=.
      - uses: codecov/codecov-action@v5

  kotlin:
    needs: detect-changes
    if: needs.detect-changes.outputs.kotlin-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/setup-gradle@v4
      - run: ./gradlew ktlintCheck detekt test --no-daemon

  bazel:
    needs: detect-changes
    if: needs.detect-changes.outputs.bazel-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - run: bazel build //...

  docs:
    needs: detect-changes
    if: needs.detect-changes.outputs.docs-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install mkdocs mkdocs-material
      - run: mkdocs build --strict
      - name: Ensure README table is up-to-date
        run: python scripts/gen_readme_table.py --check